name: MOSB Gate Agent Test Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    # 매일 오전 9시에 테스트 실행
    - cron: '0 9 * * *'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
        cache: [npm]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: ${{ matrix.cache }}
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint || echo "Linting not configured"
      
    - name: Run type checking
      run: npm run type-check || echo "Type checking not configured"
      
    - name: Run unit tests
      run: npm test -- --coverage --watchAll=false
      
    - name: Run integration tests
      run: npm test -- __tests__/MatchingService.test.ts __tests__/ReactComponents.test.tsx --coverage --watchAll=false
      
    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ matrix.node-version }}
        path: coverage/
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          __tests__/
          *.log
          
  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Run dependency check
      run: npm outdated || echo "Dependencies check completed"
      
  build-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: .next/
        
  performance-test:
    runs-on: ubuntu-latest
    needs: [test, build-test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run performance tests
      run: |
        echo "Performance testing not yet configured"
        # npm run test:performance || echo "Performance tests not configured"
        
  notify:
    runs-on: ubuntu-latest
    needs: [test, security-scan, build-test, performance-test]
    if: always()
    
    steps:
    - name: Test Results Summary
      run: |
        echo "## Test Pipeline Results" >> $GITHUB_STEP_SUMMARY
        echo "**Node.js Versions Tested:** 18.x, 20.x" >> $GITHUB_STEP_SUMMARY
        echo "**Test Status:** ${{ needs.test.result }}" >> $GITHUB_STEP_SUMMARY
        echo "**Security Scan:** ${{ needs.security-scan.result }}" >> $GITHUB_STEP_SUMMARY
        echo "**Build Status:** ${{ needs.build-test.result }}" >> $GITHUB_STEP_SUMMARY
        echo "**Performance Test:** ${{ needs.performance-test.result }}" >> $GITHUB_STEP_SUMMARY 